{"ast":null,"code":"var _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js\";\nimport React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\"; // import Countdown from 'react-countdown-now'\n\nimport Timer from \"../Components/Timer\";\nconst orders = {\n  1: [\"patty\", \"tomato\", \"lettuce\", \"pickles\"],\n  2: [\"lettuce\", \"tomato\", \"patty\", \"pickles\"],\n  3: [\"pickles\", \"tomato\", \"lettuce\", \"patty\"],\n  4: [\"patty\", \"pickles\", \"lettuce\", \"tomato\"]\n};\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.countdown = () => {\n      this.setState({\n        gameTimer: this.state.gameTimer - 1\n      });\n    };\n\n    this.buildBurger = ingr => {\n      console.log(\"hello\");\n\n      if (this.state.clickCounter < 5) {\n        this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        });\n      } else {\n        alert(\"stahp\");\n        this.setState({\n          currentBurger: [],\n          currentBurger2: [],\n          clickCounter: 0\n        });\n      }\n    };\n\n    this.burgerSubmit = () => {\n      console.log(\"clicked the bun\");\n      let results = [];\n\n      for (let i = 0; i < this.state.currentBurger.length; i++) {\n        if (this.state.currentBurger[i].name !== orders[this.state.currentOrderNumber][i]) {\n          results.push(false);\n        }\n      }\n\n      results.includes(false) ? console.log(results) : this.setState({\n        currentScore: this.state.currentScore + 1\n      });\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        currentOrderNumber: Math.floor(Math.random() * 4) + 1,\n        clickCounter: 0\n      });\n    };\n\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameTimer: 30\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.countdown, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Ingredients, {\n      buildBurger: this.buildBurger,\n      burgerSubmit: this.burgerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(BurgerBuildContainer, {\n      burger: this.state.currentBurger2,\n      orders: orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      gameTimer: this.state.gameTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js"],"names":["React","BurgerBuildContainer","Ingredients","Timer","orders","GameContainer","Component","constructor","countdown","setState","gameTimer","state","buildBurger","ingr","console","log","clickCounter","currentBurger","currentBurger2","alert","burgerSubmit","results","i","length","name","currentOrderNumber","push","includes","currentScore","Math","floor","random","componentDidMount","setInterval","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\";\n// import Countdown from 'react-countdown-now'\nimport Timer from \"../Components/Timer\"\n\nconst orders = {\n  1: [\"patty\", \"tomato\", \"lettuce\", \"pickles\"],\n  2: [\"lettuce\", \"tomato\", \"patty\", \"pickles\"],\n  3: [\"pickles\", \"tomato\", \"lettuce\", \"patty\"],\n  4: [\"patty\", \"pickles\", \"lettuce\", \"tomato\"]\n};\n\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameTimer: 30\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.countdown, 1000)\n  }\n\n  countdown = () => {\n    this.setState({\n      gameTimer: this.state.gameTimer - 1\n    })\n  }\n  \n  buildBurger = ingr => {\n    console.log(\"hello\");\n\n\n    if (this.state.clickCounter < 5) {\n       this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        })\n    } else {\n      alert(\"stahp\");\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        clickCounter: 0\n      })\n    }\n  };\n\n  burgerSubmit = () => {\n    console.log(\"clicked the bun\");\n\n    let results = [];\n\n    for (let i = 0; i < this.state.currentBurger.length; i++) {\n      if (this.state.currentBurger[i].name !== orders[this.state.currentOrderNumber][i]) {\n        results.push(false);\n      }\n    }\n\n    results.includes(false)\n      ? console.log(results)\n      : this.setState({ currentScore: this.state.currentScore + 1 });\n\n    this.setState({\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: Math.floor(Math.random() * 4) + 1,\n      clickCounter: 0\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Ingredients\n          buildBurger={this.buildBurger}\n          burgerSubmit={this.burgerSubmit}\n        />\n        <BurgerBuildContainer\n          burger={this.state.currentBurger2}\n          orders={orders}\n        />\n\n        <Timer gameTimer={this.state.gameTimer}/>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}