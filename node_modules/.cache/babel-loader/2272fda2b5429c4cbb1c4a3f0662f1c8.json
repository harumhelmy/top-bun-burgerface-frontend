{"ast":null,"code":"var _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js\";\nimport React from 'react';\nimport Login from './Login';\nimport './App.css'; // import '../node_modules/bulma/css/bulma.css'\n\nimport './App.sass'; // in lieu of importing everything, we're only importing what we want\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Welcome from './Welcome';\nimport GameContainer from './Container/GameContainer';\nimport { Orders } from './Orders';\nimport ThunderDome from './ThunderDome';\nconst playerUrl = 'http://localhost:3000/players/';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getLoginName = event => {\n      this.setState({\n        loginName: event.target.value\n      });\n    };\n\n    this.startGame = () => {\n      this.setState({\n        gameStarted: true\n      });\n    };\n\n    this.onLogin = event => {\n      event.preventDefault();\n      fetch(playerUrl + this.state.loginName).then(res => res.json()).then(player => this.setState({\n        currentPlayer: player\n      }));\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentPlayer: '',\n        loginName: ''\n      });\n    };\n\n    this.exitGame = () => {\n      console.log(\"exit game\");\n      this.setState({\n        gameStarted: false\n      });\n    };\n\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: '',\n      gameStarted: false,\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      orders: Orders()\n    });\n    console.log('mounted');\n    fetch(playerUrl).then(res => res.json()).then(allPlayers => this.setState({\n      allPlayers,\n      orders: Orders()\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        loginName: this.state.loginName,\n        getLoginName: this.getLoginName,\n        onLogin: this.onLogin,\n        currentPlayer: this.state.currentPlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ThunderDome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), this.state.gameStarted ? React.createElement(GameContainer, {\n      exitGame: this.exitGame,\n      orders: this.state.orders,\n      currentPlayer: this.state.currentPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : null, this.state.currentPlayer && !this.state.gameStarted ? React.createElement(Welcome, {\n      logout: this.logout,\n      startGame: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js"],"names":["React","Login","BrowserRouter","Router","Route","Welcome","GameContainer","Orders","ThunderDome","playerUrl","App","Component","constructor","getLoginName","event","setState","loginName","target","value","startGame","gameStarted","onLogin","preventDefault","fetch","state","then","res","json","player","currentPlayer","logout","exitGame","console","log","allPlayers","orders","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAO,YAAP,C,CAAoB;;AACpB,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,SAAS,GAAG,gCAAlB;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAWbC,YAXa,GAWGC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGD,KAfY;;AAAA,SA8BbC,SA9Ba,GA8BD,MAAM;AAChB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAlCY;;AAAA,SAoCbC,OApCa,GAoCFP,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACQ,cAAN;AAEAC,MAAAA,KAAK,CAACd,SAAS,GAAC,KAAKe,KAAL,CAAWR,SAAtB,CAAL,CACCS,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,MAAM,IAAI,KAAKb,QAAL,CAAc;AAC5Bc,QAAAA,aAAa,EAAED;AADa,OAAd,CAFhB;AAKD,KA5CY;;AAAA,SA8CbE,MA9Ca,GA8CJ,MAAK;AACZ,WAAKf,QAAL,CAAc;AACZc,QAAAA,aAAa,EAAE,EADH;AAEZb,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAnDY;;AAAA,SAqDbe,QArDa,GAqDF,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKlB,QAAL,CAAc;AACZK,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KA1DY;;AAEX,SAAKI,KAAL,GAAa;AACXR,MAAAA,SAAS,EAAE,EADA;AAEXkB,MAAAA,UAAU,EAAE,EAFD;AAGXL,MAAAA,aAAa,EAAE,EAHJ;AAIXT,MAAAA,WAAW,EAAE,KAJF;AAKXe,MAAAA,MAAM,EAAE;AALG,KAAb;AAOD;;AAQDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKrB,QAAL,CAAc;AACZoB,MAAAA,MAAM,EAAE5B,MAAM;AADF,KAAd;AAGAyB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,IAAAA,KAAK,CAACd,SAAD,CAAL,CACCgB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMS,UAAU,IAAI,KAAKnB,QAAL,CAAc;AAChCmB,MAAAA,UADgC;AAEhCC,MAAAA,MAAM,EAAE5B,MAAM;AAFkB,KAAd,CAFpB;AAMD;;AAgCD8B,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,MAAM,EAAG,MAAM,oBAAC,KAAD;AACxC,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWR,SADkB;AAExC,QAAA,YAAY,EAAE,KAAKH,YAFqB;AAGxC,QAAA,OAAO,EAAE,KAAKQ,OAH0B;AAIxC,QAAA,aAAa,EAAE,KAAKG,KAAL,CAAWK,aAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAErB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATN,CADF,EAaG,KAAKgB,KAAL,CAAWJ,WAAX,GAAyB,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKW,QAA9B;AAAwC,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWW,MAA3D;AAAmE,MAAA,aAAa,EAAE,KAAKX,KAAL,CAAWK,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAAyI,IAb5I,EAgBI,KAAKL,KAAL,CAAWK,aAAX,IAA4B,CAAC,KAAKL,KAAL,CAAWJ,WAAxC,GAAsD,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKU,MAAtB;AAA8B,MAAA,SAAS,EAAE,KAAKX,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,GAEA,IAlBJ,CADF;AAuBD;;AAtF+B;;AAyFlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Login from './Login'\nimport './App.css';\n// import '../node_modules/bulma/css/bulma.css'\nimport './App.sass' // in lieu of importing everything, we're only importing what we want\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Welcome from './Welcome'\nimport GameContainer from './Container/GameContainer'\nimport { Orders } from './Orders'\nimport ThunderDome from './ThunderDome'\n\nconst playerUrl = 'http://localhost:3000/players/'\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: '',\n      gameStarted: false, \n      orders: []\n    }\n  }\n\n  getLoginName = (event) => {\n    this.setState({\n      loginName: event.target.value\n    })\n  }\n\n  componentDidMount(){\n    this.setState({\n      orders: Orders()\n    })\n    console.log('mounted')\n    fetch(playerUrl)\n    .then(res => res.json())\n    .then(allPlayers => this.setState({\n      allPlayers,\n      orders: Orders()\n    }))\n  }\n\n  startGame = () => {\n    this.setState({\n      gameStarted: true\n    })\n  }\n\n  onLogin = (event) => {\n    event.preventDefault()\n\n    fetch(playerUrl+this.state.loginName)\n    .then(res => res.json())\n    .then(player => this.setState({\n      currentPlayer: player\n    }))    \n  }\n\n  logout = () =>{\n    this.setState({\n      currentPlayer: '',\n      loginName: ''\n    })\n  }\n\n  exitGame = () => {\n    console.log(\"exit game\")\n    this.setState({\n      gameStarted: false\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\" >\n        <Router>\n          \n            <Route exact path='/login' render={ () => <Login \n              loginName={this.state.loginName}\n              getLoginName={this.getLoginName}\n              onLogin={this.onLogin}\n              currentPlayer={this.state.currentPlayer} />\n              }\n            />\n              <Route exact path='/' component={ThunderDome} />\n        </Router>\n\n        {this.state.gameStarted ? <GameContainer exitGame={this.exitGame} orders={this.state.orders} currentPlayer={this.state.currentPlayer}/> : null}\n       \n        {\n          this.state.currentPlayer && !this.state.gameStarted ? <Welcome logout={this.logout} startGame={this.startGame}/>\n          : \n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}