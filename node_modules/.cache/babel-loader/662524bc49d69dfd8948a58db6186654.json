{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js\";\nimport React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\"; // import Countdown from 'react-countdown-now'\n\nimport Timer from \"../Components/Timer\";\nimport EndGame from \"../Components/EndGame\";\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.buildBurger = ingr => {\n      if (this.state.clickCounter < 5) {\n        this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        });\n      } else {\n        alert(\"stahp\");\n        this.setState({\n          currentBurger: [],\n          currentBurger2: [],\n          clickCounter: 0\n        });\n      }\n    };\n\n    this.burgerSubmit = () => {\n      let results = [];\n\n      for (let i = 0; i < this.state.currentBurger.length; i++) {\n        if (this.state.currentBurger[i].name !== this.props.orders[this.state.currentOrderNumber][i]) {\n          results.push(false);\n        }\n      }\n\n      results.includes(false) ? console.log(results) : this.setState({\n        currentScore: this.state.currentScore + 1\n      });\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        currentOrderNumber: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        clickCounter: 0\n      });\n    };\n\n    this.changeGameState = () => {\n      this.setState({\n        gameEnded: !this.state.gameEnded\n      });\n    };\n\n    this.removeIngredient = () => {\n      this.state.currentBurger.pop();\n      this.state.currentBurger2.shift();\n      this.setState({\n        currentBurger: this.state.currentBurger,\n        currentBurger2: this.state.currentBurger2.reverse(),\n        clickCounter: this.state.clickCounter - 1\n      });\n    };\n\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.gameEnded === false ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Ingredients, {\n      buildBurger: this.buildBurger,\n      burgerSubmit: this.burgerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" Current order to be fulfilled:  \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.orders[this.state.currentOrderNumber].map(ingr => React.createElement(\"p\", {\n      key: Math.floor(Math.random() * 1000000) + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, ingr))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Current score: \", this.state.currentScore), React.createElement(BurgerBuildContainer, {\n      burger: this.state.currentBurger2,\n      orders: this.props.orders,\n      removeIngredient: this.removeIngredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      endGame: this.endGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : React.createElement(EndGame, {\n      exitGame: this.props.exitGame,\n      currentScore: this.state.currentScore,\n      startGame: this.props.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js"],"names":["React","BurgerBuildContainer","Ingredients","Timer","EndGame","GameContainer","Component","constructor","buildBurger","ingr","state","clickCounter","setState","currentBurger","currentBurger2","alert","burgerSubmit","results","i","length","name","props","orders","currentOrderNumber","push","includes","console","log","currentScore","Math","floor","random","Object","keys","changeGameState","gameEnded","removeIngredient","pop","shift","reverse","render","map","endGame","exitGame","startGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\";\n// import Countdown from 'react-countdown-now'\nimport Timer from \"../Components/Timer\"\nimport EndGame from \"../Components/EndGame\"\n\nexport default class GameContainer extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false \n    };\n  }\n  \n  buildBurger = ingr => {\n    if (this.state.clickCounter < 5) {\n       this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        })\n    } else {\n      alert(\"stahp\");\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        clickCounter: 0\n      })\n    }\n  };\n\n  burgerSubmit = () => {\n    let results = [];\n\n    for (let i = 0; i < this.state.currentBurger.length; i++) {\n      if (this.state.currentBurger[i].name !== this.props.orders[this.state.currentOrderNumber][i]) {\n        results.push(false);\n      }\n    }\n\n    results.includes(false)\n      ? console.log(results)\n      : this.setState({ currentScore: this.state.currentScore + 1 });\n\n    this.setState({\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      clickCounter: 0\n    });\n  };\n\n  changeGameState = () => {\n    this.setState({\n      gameEnded: !this.state.gameEnded\n    })\n  }\n\n  removeIngredient = () => {\n    this.state.currentBurger.pop()\n    this.state.currentBurger2.shift()\n\n    this.setState({\n      currentBurger: this.state.currentBurger,\n      currentBurger2: this.state.currentBurger2.reverse(),\n      clickCounter: this.state.clickCounter - 1 \n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.gameEnded === false \n          ? \n          <div>\n            <Ingredients\n              buildBurger={this.buildBurger}\n              burgerSubmit={this.burgerSubmit}\n            />\n\n            <h4> Current order to be fulfilled:  </h4>\n            \n            <ul>\n            {\n              this.props.orders[this.state.currentOrderNumber].map( ingr => <p key={Math.floor(Math.random() * 1000000) + 1}>{ingr}</p> )\n            }\n            </ul>\n\n            <h3>Current score: {this.state.currentScore}</h3>\n            <BurgerBuildContainer\n              burger={this.state.currentBurger2}\n              orders={this.props.orders}\n              removeIngredient={this.removeIngredient}\n            />\n\n            <Timer endGame={this.endGame} />\n\n          </div>\n          : \n            <EndGame exitGame={this.props.exitGame} currentScore={this.state.currentScore} startGame={this.props.startGame}/>        \n      }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}