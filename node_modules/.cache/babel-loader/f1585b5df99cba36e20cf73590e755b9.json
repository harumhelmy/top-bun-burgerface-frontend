{"ast":null,"code":"var _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js\";\nimport React, { Fragment } from 'react';\nimport Login from './Login';\nimport './App.css'; // import '../node_modules/bulma/css/bulma.css'\n\nimport './App.sass'; // in lieu of importing everything, we're only importing what we want\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Welcome from './Welcome';\nimport GameContainer from './Container/GameContainer';\nimport { Orders } from './Orders';\nimport ThunderDome from './ThunderDome';\nconst playerUrl = 'http://localhost:3000/players/';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getLoginName = event => {\n      this.setState({\n        loginName: event.target.value\n      });\n    };\n\n    this.startGame = () => {\n      this.setState({\n        gameStarted: true\n      });\n    };\n\n    this.onLogin = event => {\n      event.preventDefault();\n      fetch(playerUrl + this.state.loginName).then(res => res.json()).then(player => this.setState({\n        currentPlayer: player\n      }));\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentPlayer: '',\n        loginName: ''\n      });\n    };\n\n    this.exitGame = () => {\n      console.log(\"exit game\");\n      this.setState({\n        gameStarted: false\n      });\n    };\n\n    this.updatePlayer = player => {\n      this.setState({\n        currentPlayer: player\n      });\n    };\n\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: '',\n      gameStarted: false,\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      orders: Orders()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        loginName: this.state.loginName,\n        getLoginName: this.getLoginName,\n        onLogin: this.onLogin,\n        currentPlayer: this.state.currentPlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ThunderDome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this.state.currentPlayer && !this.state.gameStarted ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Welcome, {\n      logout: this.logout,\n      startGame: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/game\",\n      render: () => React.createElement(GameContainer, {\n        exitGame: this.exitGame,\n        orders: this.state.orders,\n        currentPlayer: this.state.currentPlayer,\n        updatePlayer: this.updatePlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js"],"names":["React","Fragment","Login","BrowserRouter","Router","Route","Welcome","GameContainer","Orders","ThunderDome","playerUrl","App","Component","constructor","getLoginName","event","setState","loginName","target","value","startGame","gameStarted","onLogin","preventDefault","fetch","state","then","res","json","player","currentPlayer","logout","exitGame","console","log","updatePlayer","allPlayers","orders","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport Login from './Login'\nimport './App.css';\n// import '../node_modules/bulma/css/bulma.css'\nimport './App.sass' // in lieu of importing everything, we're only importing what we want\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Welcome from './Welcome'\nimport GameContainer from './Container/GameContainer'\nimport { Orders } from './Orders'\nimport ThunderDome from './ThunderDome'\n\nconst playerUrl = 'http://localhost:3000/players/'\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: '',\n      gameStarted: false, \n      orders: []\n    }\n  }\n\n  getLoginName = (event) => {\n    this.setState({\n      loginName: event.target.value\n    })\n  }\n\n  componentDidMount(){\n    this.setState({\n      orders: Orders()\n    })\n  }\n\n  startGame = () => {\n    this.setState({\n      gameStarted: true\n    })\n  }\n\n  onLogin = (event) => {\n    event.preventDefault()\n\n    fetch(playerUrl+this.state.loginName)\n    .then(res => res.json())\n    .then(player => this.setState({\n      currentPlayer: player\n    }))    \n  }\n\n  logout = () =>{\n    this.setState({\n      currentPlayer: '',\n      loginName: ''\n    })\n  }\n\n  exitGame = () => {\n    console.log(\"exit game\")\n    this.setState({\n      gameStarted: false\n    })\n  }\n\n  updatePlayer = (player) => {\n    this.setState({\n      currentPlayer: player\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\" >\n        <Router>\n          <Switch>\n            <Route exact path='/login' render={ () => <Login \n              loginName={this.state.loginName}\n              getLoginName={this.getLoginName}\n              onLogin={this.onLogin}\n              currentPlayer={this.state.currentPlayer} />\n              }\n            />\n            <Route exact path='/' component={ThunderDome} />\n            \n            {\n            this.state.currentPlayer && !this.state.gameStarted \n            ? <Fragment> \n              <Welcome logout={this.logout} startGame={this.startGame}/>\n              <Route exact path='/game' render ={ () => <GameContainer \n              exitGame={this.exitGame} \n              orders={this.state.orders} \n              currentPlayer={this.state.currentPlayer} \n              updatePlayer={this.updatePlayer} /> \n            }\n            />\n             </Fragment>\n            :\n            null\n          }\n          </Switch>\n        </Router>\n       \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}