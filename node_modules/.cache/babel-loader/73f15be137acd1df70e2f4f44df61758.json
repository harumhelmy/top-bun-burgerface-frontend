{"ast":null,"code":"var _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js\";\nimport React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\"; // import Countdown from 'react-countdown-now'\n\nimport Timer from \"../Components/Timer\";\nimport EndGame from \"../Components/EndGame\";\nconst orders = {\n  1: [\"patty\", \"tomato\", \"lettuce\", \"pickles\"],\n  2: [\"lettuce\", \"tomato\", \"patty\", \"pickles\"],\n  3: [\"pickles\", \"tomato\", \"lettuce\", \"patty\"],\n  4: [\"patty\", \"pickles\", \"lettuce\", \"tomato\"]\n};\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.buildBurger = ingr => {\n      if (this.state.clickCounter < 5) {\n        this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        });\n      } else {\n        alert(\"stahp\");\n        this.setState({\n          currentBurger: [],\n          currentBurger2: [],\n          clickCounter: 0\n        });\n      }\n    };\n\n    this.burgerSubmit = () => {\n      let results = [];\n\n      for (let i = 0; i < this.state.currentBurger.length; i++) {\n        if (this.state.currentBurger[i].name !== orders[this.state.currentOrderNumber][i]) {\n          results.push(false);\n        }\n      }\n\n      results.includes(false) ? console.log(results) : this.setState({\n        currentScore: this.state.currentScore + 1\n      });\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        currentOrderNumber: Math.floor(Math.random() * 4) + 1,\n        clickCounter: 0\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        gameEnded: true\n      });\n    };\n\n    this.removeIngredient = () => {\n      this.state.currentBurger.pop();\n      this.state.currentBurger2.shift();\n      this.setState({\n        currentBurger: this.state.currentBurger,\n        currentBurger2: this.state.currentBurger2.reverse(),\n        clickCounter: this.state.clickCounter - 1\n      });\n    };\n\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.gameEnded === false ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Ingredients, {\n      buildBurger: this.buildBurger,\n      burgerSubmit: this.burgerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Current order to be fulfilled:  \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, orders[this.state.currentOrderNumber].map(ingr => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, ingr))), React.createElement(BurgerBuildContainer, {\n      burger: this.state.currentBurger2,\n      orders: orders,\n      removeIngredient: this.removeIngredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      endGame: this.endGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Current score: \", this.state.currentScore)) : React.createElement(EndGame, {\n      exitGame: this.props.exitGame,\n      currentScore: this.state.currentScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js"],"names":["React","BurgerBuildContainer","Ingredients","Timer","EndGame","orders","GameContainer","Component","constructor","buildBurger","ingr","state","clickCounter","setState","currentBurger","currentBurger2","alert","burgerSubmit","results","i","length","name","currentOrderNumber","push","includes","console","log","currentScore","Math","floor","random","endGame","gameEnded","removeIngredient","pop","shift","reverse","render","map","props","exitGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\";\n// import Countdown from 'react-countdown-now'\nimport Timer from \"../Components/Timer\"\nimport EndGame from \"../Components/EndGame\"\n\nconst orders = {\n  1: [\"patty\", \"tomato\", \"lettuce\", \"pickles\"],\n  2: [\"lettuce\", \"tomato\", \"patty\", \"pickles\"],\n  3: [\"pickles\", \"tomato\", \"lettuce\", \"patty\"],\n  4: [\"patty\", \"pickles\", \"lettuce\", \"tomato\"]\n};\n\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false \n    };\n  }\n  \n  buildBurger = ingr => {\n\n    if (this.state.clickCounter < 5) {\n       this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        })\n    } else {\n      alert(\"stahp\");\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        clickCounter: 0\n      })\n    }\n  };\n\n  burgerSubmit = () => {\n    let results = [];\n\n    for (let i = 0; i < this.state.currentBurger.length; i++) {\n      if (this.state.currentBurger[i].name !== orders[this.state.currentOrderNumber][i]) {\n        results.push(false);\n      }\n    }\n\n    results.includes(false)\n      ? console.log(results)\n      : this.setState({ currentScore: this.state.currentScore + 1 });\n\n    this.setState({\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: Math.floor(Math.random() * 4) + 1,\n      clickCounter: 0\n    });\n  };\n\n  endGame = () => {\n    this.setState({\n      gameEnded: true\n    })\n  }\n\n  removeIngredient = () => {\n    this.state.currentBurger.pop()\n    this.state.currentBurger2.shift()\n\n    this.setState({\n      currentBurger: this.state.currentBurger,\n      currentBurger2: this.state.currentBurger2.reverse(),\n      clickCounter: this.state.clickCounter - 1 \n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.gameEnded === false \n          ? \n          <div>\n            <Ingredients\n              buildBurger={this.buildBurger}\n              burgerSubmit={this.burgerSubmit}\n            />\n\n            <h4> Current order to be fulfilled:  </h4>\n            \n            <ul>\n            {\n              orders[this.state.currentOrderNumber].map( ingr => <p>{ingr}</p> )\n            }\n            </ul>\n\n            <BurgerBuildContainer\n              burger={this.state.currentBurger2}\n              orders={orders}\n              removeIngredient={this.removeIngredient}\n            />\n\n            <Timer endGame={this.endGame} />\n\n            <h3>Current score: {this.state.currentScore}</h3>\n          </div>\n          : \n            <EndGame exitGame={this.props.exitGame} currentScore={this.state.currentScore} />        \n      }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}