{"ast":null,"code":"var _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js\";\nimport React, { Fragment } from 'react';\nimport Login from './Login';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nconst playerUrl = 'http://localhost:3000/players';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getLoginName = event => {\n      this.setState({\n        loginName: event.target.value\n      });\n    };\n\n    this.onLogin = () => {\n      const currentPlayer = this.state.allPlayers.filter(player => player.name.toLowerCase() === this.state.loginName.toLowerCase());\n    };\n\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(playerUrl).then(res => res.json()).then(allPlayers => this.setState({\n      allPlayers\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Login, {\n        loginName: this.state.loginName,\n        getLoginName: this.getLoginName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/App.js"],"names":["React","Fragment","Login","BrowserRouter","Router","Route","playerUrl","App","Component","constructor","getLoginName","event","setState","loginName","target","value","onLogin","currentPlayer","state","allPlayers","filter","player","name","toLowerCase","componentDidMount","fetch","then","res","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,MAAMC,SAAS,GAAG,+BAAlB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,YATa,GASGC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGD,KAbY;;AAAA,SAuBbC,OAvBa,GAuBH,MAAM;AACd,YAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA8BC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,WAAZ,OAA8B,KAAKL,KAAL,CAAWL,SAAX,CAAqBU,WAArB,EAAtE,CAAtB;AACD,KAzBY;;AAEX,SAAKL,KAAL,GAAa;AACXL,MAAAA,SAAS,EAAE,EADA;AAEXM,MAAAA,UAAU,EAAE,EAFD;AAGXF,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKD;;AAQDO,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACnB,SAAD,CAAL,CACCoB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMP,UAAU,IAAI,KAAKP,QAAL,CAAc;AAChCO,MAAAA;AADgC,KAAd,CAFpB;AAKD;;AAMDU,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAG,MAAM,oBAAC,KAAD;AACnC,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWL,SADa;AAEnC,QAAA,YAAY,EAAE,KAAKH,YAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADF;AAWD;;AAzC+B;;AA4ClC,eAAeH,GAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport Login from './Login'\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst playerUrl = 'http://localhost:3000/players'\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      loginName: '',\n      allPlayers: [],\n      currentPlayer: ''\n    }\n  }\n\n  getLoginName = (event) => {\n    this.setState({\n      loginName: event.target.value\n    })\n  }\n\n  componentDidMount(){\n    fetch(playerUrl)\n    .then(res => res.json())\n    .then(allPlayers => this.setState({\n      allPlayers\n    }))\n  }\n\n  onLogin = () => {\n    const currentPlayer = this.state.allPlayers.filter( player => player.name.toLowerCase() === this.state.loginName.toLowerCase())\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n            <Route exact path='/' render={ () => <Login \n              loginName={this.state.loginName}\n              getLoginName={this.getLoginName} />\n              }\n            />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}