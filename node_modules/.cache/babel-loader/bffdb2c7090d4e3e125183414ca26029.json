{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\"; // import Countdown from 'react-countdown-now'\n\nimport Timer from \"../Components/Timer\";\nimport EndGame from \"../Components/EndGame\";\nimport Customers from \"../Components/Customers\";\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.buildBurger = ingr => {\n      if (this.state.clickCounter < 10) {\n        this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        });\n      } else {\n        alert(\"stahp\"); // this.setState({\n        //   currentBurger: [],\n        //   currentBurger2: [],\n        //   clickCounter: 0\n        // })\n      }\n    };\n\n    this.burgerSubmit = () => {\n      let results = [];\n\n      for (let i = 0; i < this.state.currentBurger.length; i++) {\n        if (this.state.currentBurger[i].name === this.props.orders[this.state.currentOrderNumber][i]) {\n          results.push(true);\n        }\n      }\n\n      if (results.length === 4) {\n        let update = this.state.currentScore;\n        this.setState({\n          currentScore: update + 1\n        });\n      } else {\n        console.log('wrong');\n      }\n\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        currentOrderNumber: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber1: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber2: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber3: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber4: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        clickCounter: 0\n      });\n    };\n\n    this.changeGameState = () => {\n      this.setState(_objectSpread({}, this.initialState, {\n        gameEnded: !this.state.gameEnded\n      }));\n    };\n\n    this.customerOrders = () => {\n      return this.props.orders[Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1];\n    };\n\n    this.removeIngredient = () => {\n      this.state.currentBurger.pop();\n      this.state.currentBurger2.shift();\n      this.setState({\n        currentBurger: this.state.currentBurger,\n        currentBurger2: this.state.currentBurger2.reverse(),\n        clickCounter: this.state.clickCounter - 1\n      });\n    };\n\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false,\n      currentOrderNumber1: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber2: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber3: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber4: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.gameEnded === false ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Ingredients, {\n      buildBurger: this.buildBurger,\n      burgerSubmit: this.burgerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Current order to be fulfilled:  \"), this.props.orders[this.state.currentOrderNumber].map(ingr => React.createElement(\"p\", {\n      key: Math.floor(Math.random() * 1000000) + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, ingr)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Current score: \", this.state.currentScore), React.createElement(BurgerBuildContainer, {\n      burger: this.state.currentBurger2,\n      orders: this.props.orders,\n      removeIngredient: this.removeIngredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      changeGameState: this.changeGameState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      order: this.state.currentOrderNumber1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      order: this.state.currentOrderNumber2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      order: this.state.currentOrderNumber3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      order: this.state.currentOrderNumber4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : React.createElement(EndGame, {\n      exitGame: this.props.exitGame,\n      currentScore: this.state.currentScore,\n      changeGameState: this.changeGameState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js"],"names":["React","BurgerBuildContainer","Ingredients","Timer","EndGame","Customers","GameContainer","Component","constructor","buildBurger","ingr","state","clickCounter","setState","currentBurger","currentBurger2","alert","burgerSubmit","results","i","length","name","props","orders","currentOrderNumber","push","update","currentScore","console","log","Math","floor","random","Object","keys","currentOrderNumber1","currentOrderNumber2","currentOrderNumber3","currentOrderNumber4","changeGameState","initialState","gameEnded","customerOrders","removeIngredient","pop","shift","reverse","render","map","exitGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\";\n// import Countdown from 'react-countdown-now'\nimport Timer from \"../Components/Timer\"\nimport EndGame from \"../Components/EndGame\"\nimport Customers from \"../Components/Customers\"\n\nexport default class GameContainer extends React.Component {\n\n  constructor() {\n    super();\n    this.state = this.initialState\n  }\n\n  get initialState() {\n   return {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: 1,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false, \n      currentOrderNumber1: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber2: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber3: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber4: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      \n    };\n  }\n\n  \n  buildBurger = ingr => {\n    if (this.state.clickCounter < 10) {\n       this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        })\n    } else {\n      alert(\"stahp\");\n      // this.setState({\n      //   currentBurger: [],\n      //   currentBurger2: [],\n      //   clickCounter: 0\n      // })\n    }\n  };\n\n  burgerSubmit = () => {\n    let results = [];\n\n    for (let i = 0; i < this.state.currentBurger.length; i++) {\n      if (this.state.currentBurger[i].name === this.props.orders[this.state.currentOrderNumber][i]) {\n        \n        results.push(true);\n      }\n    }\n\n\n    if (results.length === 4 ) {\n      let update = this.state.currentScore\n      this.setState({ currentScore: update + 1 });\n     }\n     else{\n     console.log('wrong')\n  \n     }\n\n\n    this.setState({\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber1: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber2: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber3: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      currentOrderNumber4: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n      clickCounter: 0\n    });\n  };\n\n  changeGameState = () => {\n    this.setState({\n      ...this.initialState,\n      gameEnded: !this.state.gameEnded\n    })\n  }\n\n  customerOrders = () =>{\n   return this.props.orders[Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1]\n  }\n\n  removeIngredient = () => {\n    this.state.currentBurger.pop()\n    this.state.currentBurger2.shift()\n\n    this.setState({\n      currentBurger: this.state.currentBurger,\n      currentBurger2: this.state.currentBurger2.reverse(),\n      clickCounter: this.state.clickCounter - 1 \n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.gameEnded === false \n          ? \n          <div>\n            <Ingredients\n              buildBurger={this.buildBurger}\n              burgerSubmit={this.burgerSubmit}\n            />\n\n            <h4> Current order to be fulfilled:  </h4>\n            \n         \n              {this.props.orders[this.state.currentOrderNumber].map( ingr => <p key={Math.floor(Math.random() * 1000000) + 1}>{ingr}</p> )}\n         \n\n            <h3>Current score: {this.state.currentScore}</h3>\n            <BurgerBuildContainer\n              burger={this.state.currentBurger2}\n              orders={this.props.orders}\n              removeIngredient={this.removeIngredient}\n            />\n\n            <Timer changeGameState={this.changeGameState} />\n\n            <Customers order={this.state.currentOrderNumber1}/>\n            <Customers order={this.state.currentOrderNumber2}/>\n            <Customers order={this.state.currentOrderNumber3}/>\n            <Customers order={this.state.currentOrderNumber4}/>\n         \n\n          </div>\n          : \n            <EndGame exitGame={this.props.exitGame} currentScore={this.state.currentScore} changeGameState={this.changeGameState}/>        \n      }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}