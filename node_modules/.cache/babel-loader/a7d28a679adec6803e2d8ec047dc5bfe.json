{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Components/Customers.js\";\nimport React from \"react\";\nexport default class Customers extends React.Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      this.interval = setInterval(this.countdown, 1000);\n      this.setState({\n        timerInterval: this.interval\n      });\n    };\n\n    this.countdown = () => {\n      if (this.state.customerTimer > 0) {\n        this.setState({\n          customerTimer: this.state.customerTimer - 1\n        });\n      } else {\n        clearInterval(this.interval);\n        this.setState({\n          customerTimer: Math.floor(Math.random() * 12) + 6 // () => this.props.getNewOrderNumber(this.props.customerId)\n\n        });\n      }\n    };\n\n    this.state = {\n      customerTimer: Math.floor(Math.random() * 12) + 6,\n      timerInterval: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        display: \"flex\",\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flext-start'\n      },\n      onClick: () => {\n        this.props.selectOrder(this.props.orderNumber);\n        this.startTimer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        display: \"flex\",\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.order.slice(0).reverse().map((ingr, index) => React.createElement(\"p\", {\n      style: {\n        position: 'relative',\n        display: \"flex\",\n        alignItems: 'flex-end',\n        flexDirection: 'column',\n        justifyContent: 'flex-end'\n      },\n      key: Math.floor(Math.random() * 1000000) + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        marginTop: '-80px',\n        marginBottom: '-30px',\n        zIndex: \"-\".concat(index),\n        position: 'relative'\n      },\n      height: \"45%\",\n      width: \"45%\",\n      alt: \"\",\n      src: require(\"../images/\".concat(ingr, \".png\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      margin: \"50px\",\n      alt: \"\",\n      height: \"170px\",\n      width: \"190px\",\n      src: require(\"../TopBunCharacters/\".concat(this.props.currentPic, \".gif\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod4/week3/project/top-bun-burgerface/top-bun-burgerface-frontend/src/Components/Customers.js"],"names":["React","Customers","Component","constructor","startTimer","interval","setInterval","countdown","setState","timerInterval","state","customerTimer","clearInterval","Math","floor","random","render","position","display","flexDirection","alignItems","justifyContent","props","selectOrder","orderNumber","order","slice","reverse","map","ingr","index","marginTop","marginBottom","zIndex","require","currentPic"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\n\n\nexport default class Customers extends React.Component {\n\n\n    constructor(){\n        super()\n        this.state = {\n            customerTimer: Math.floor(Math.random() * 12) + 6,\n            timerInterval: 0\n        }\n    }\n\n\n    startTimer = () => {\n        this.interval = setInterval(this.countdown, 1000)\n\n        this.setState({\n            timerInterval: this.interval\n        })\n    }\n\n    countdown = () => {\n        if (this.state.customerTimer > 0) {\n        this.setState({\n          customerTimer: this.state.customerTimer - 1\n        })\n        } else { \n            clearInterval(this.interval)\n            this.setState({\n                customerTimer: Math.floor(Math.random() * 12) + 6\n            } \n            // () => this.props.getNewOrderNumber(this.props.customerId)\n            )\n        }}\n    \n    \n    render(){\n  \n        return(\n              <div style={{position: 'relative', display: \"flex\", flexDirection: 'row', alignItems: 'center', justifyContent: 'flext-start'}} \n              onClick={() => {this.props.selectOrder(this.props.orderNumber); this.startTimer()}} >\n                  <div style={{position: 'relative', display: \"flex\", flexDirection: 'column', justifyContent: 'center' }}>\n  \n  \n                          {this.props.order.slice(0).reverse().map( (ingr, index) => \n                              <p style={{position: 'relative', \n                              display: \"flex\", \n                              alignItems: 'flex-end', \n                              flexDirection: 'column', \n                              justifyContent: 'flex-end' }} \n                              key={Math.floor(Math.random() * 1000000) + 1}>\n  \n                                      <img style={{marginTop: '-80px', \n                                          marginBottom: '-30px',\n                                          zIndex: `-${index}`, \n                                          position: 'relative'}} \n                                          height=\"45%\" \n                                          width=\"45%\" \n                                          alt='' \n                                          src={require(`../images/${ingr}.png`)} >\n                                      </img>\n                              </p> \n                          )}\n                  </div>\n                              <p>\n                                  \n                          <img margin='50px' alt='' height=\"170px\" width=\"190px\"src={require(`../TopBunCharacters/${this.props.currentPic}.gif`)}/>\n                              </p>\n  \n                  \n              \n                  </div>\n          )\n      }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}