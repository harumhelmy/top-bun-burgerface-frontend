{"ast":null,"code":"import _defineProperty from \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\"; // import Countdown from 'react-countdown-now'\n\nimport Timer from \"../Components/Timer\";\nimport EndGame from \"../Components/EndGame\";\nimport Customers from \"../Components/Customers\";\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.buildBurger = ingr => {\n      if (this.state.clickCounter < 10) {\n        this.setState({\n          currentBurger: [...this.state.currentBurger, ingr],\n          currentBurger2: [...this.state.currentBurger, ingr],\n          clickCounter: this.state.clickCounter + 1\n        });\n      } else {\n        alert(\"stahp\");\n      }\n    };\n\n    this.burgerSubmit = () => {\n      console.log(\"clicking the bunnnn\");\n      let results = [];\n\n      if (this.state.currentOrderNumber !== null) {\n        for (let i = 0; i < this.state.currentBurger.length; i++) {\n          if (this.state.currentBurger[i].name === this.props.orders[this.state.currentOrderNumber][i]) {\n            results.push(true);\n          }\n        }\n\n        if (results.length === 4) {\n          let update = this.state.currentScore;\n          this.setState({\n            currentScore: update + 1\n          });\n        } else {\n          this.setState({\n            incorrectBurger: true\n          });\n        }\n\n        this.setState({\n          currentBurger: [],\n          currentBurger2: [],\n          currentOrderNumber: null,\n          currentOrderNumber1: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n          currentOrderNumber2: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n          currentOrderNumber3: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n          currentOrderNumber4: Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n          clickCounter: 0\n        });\n      } else {\n        alert(\"Oh hey, you gotta pick a burger to build before you can submit it! See the four orders below the bottom bun.\");\n      }\n    };\n\n    this.changeGameState = () => {\n      this.setState(_objectSpread({}, this.initialState, {\n        gameEnded: !this.state.gameEnded,\n        modalState: !this.state.modalState,\n        lastScore: this.state.currentScore\n      }));\n\n      if (this.state.currentScore > this.props.currentPlayer.high_score) {\n        const data = {\n          high_score: this.state.currentScore\n        };\n        fetch(\"http://localhost:3000/\".concat(this.props.currentPlayer.id), {\n          method: \"PATCH\",\n          headers: {\n            'Content-Type': 'applicaton/json',\n            'Accepts': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json());\n      }\n    };\n\n    this.customerOrders = () => {\n      return this.props.orders[Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1];\n    };\n\n    this.removeIngredient = () => {\n      this.state.currentBurger.pop();\n      this.state.currentBurger2.pop();\n      this.setState({\n        currentBurger: this.state.currentBurger,\n        currentBurger2: this.state.currentBurger2,\n        clickCounter: this.state.clickCounter - 1\n      });\n    };\n\n    this.selectOrder = orderNumber => {\n      this.setState({\n        currentOrderNumber: orderNumber\n      });\n    };\n\n    this.reverseIncorrectBurger = () => {\n      setTimeout(() => {\n        this.setState({\n          incorrectBurger: false\n        });\n      }, 2000);\n    };\n\n    this.componentWillUnmount = () => {\n      this.clearTimeouts();\n    };\n\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: null,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false,\n      modalState: false,\n      lastScore: 0,\n      currentOrderNumber1: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber2: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber3: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber4: Math.floor(Math.random() * 10) + 1\n    };\n  }\n\n  render() {\n    console.log(this.props.currentPlayer);\n    debugger;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.gameEnded === false ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \\uD83C\\uDF54 Top Bun \\uD83C\\uDF54 \"), React.createElement(Ingredients, {\n      buildBurger: this.buildBurger,\n      burgerSubmit: this.burgerSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", this.props.orders[this.state.currentOrderNumber] ? this.props.orders[this.state.currentOrderNumber].slice(0).reverse().map((ingr, index) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        margin: \"-45px\",\n        zIndex: \"-\".concat(index),\n        position: \"relative\",\n        backgroundSize: \"contain\"\n      },\n      height: \"50%\",\n      width: \"50%\",\n      alt: \"\",\n      src: require(\"../images/\".concat(ingr, \".png\")),\n      key: Math.floor(Math.random() * 1000000) + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))) : null), React.createElement(\"div\", {\n      className: \"column is-three-fifths\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \" \", React.createElement(BurgerBuildContainer, {\n      burger: this.state.currentBurger2,\n      orders: this.props.orders,\n      removeIngredient: this.removeIngredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Current score: \", this.state.currentScore), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Your high score: \", this.props.currentPlayer.high_score), React.createElement(Timer, {\n      changeGameState: this.changeGameState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.state.incorrectBurger ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Oop, you made the wrong burger!\"), this.reverseIncorrectBurger()) : null)), React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Customers, {\n      selectOrder: this.selectOrder,\n      order: this.props.orders[this.state.currentOrderNumber1],\n      orderNumber: this.state.currentOrderNumber1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      selectOrder: this.selectOrder,\n      order: this.props.orders[this.state.currentOrderNumber2],\n      orderNumber: this.state.currentOrderNumber2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      selectOrder: this.selectOrder,\n      order: this.props.orders[this.state.currentOrderNumber3],\n      orderNumber: this.state.currentOrderNumber3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Customers, {\n      selectOrder: this.selectOrder,\n      order: this.props.orders[this.state.currentOrderNumber4],\n      orderNumber: this.state.currentOrderNumber4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))) : React.createElement(EndGame, {\n      exitGame: this.props.exitGame,\n      showModal: this.state.modalState,\n      lastScore: this.state.lastScore,\n      changeGameState: this.changeGameState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }));\n  }\n\n}\n{\n  /* <div> */\n}\n{\n  /* {this.props.orders[this.state.currentOrderNumber1].map( ingr =>  <div style={{display: 'flex', flexDirection: 'column'}} key={Math.floor(Math.random() * 1000000) + 1}>{ingr}</div> )} */\n}\n{\n  /* </div> */\n}","map":{"version":3,"sources":["/Users/harum/Development/FlatironSchool/top-bun-burgerface/top-bun-burgerface-frontend/src/Container/GameContainer.js"],"names":["React","Fragment","BurgerBuildContainer","Ingredients","Timer","EndGame","Customers","GameContainer","Component","constructor","buildBurger","ingr","state","clickCounter","setState","currentBurger","currentBurger2","alert","burgerSubmit","console","log","results","currentOrderNumber","i","length","name","props","orders","push","update","currentScore","incorrectBurger","currentOrderNumber1","Math","floor","random","Object","keys","currentOrderNumber2","currentOrderNumber3","currentOrderNumber4","changeGameState","initialState","gameEnded","modalState","lastScore","currentPlayer","high_score","data","fetch","id","method","headers","body","JSON","stringify","then","res","json","customerOrders","removeIngredient","pop","selectOrder","orderNumber","reverseIncorrectBurger","setTimeout","componentWillUnmount","clearTimeouts","render","slice","reverse","map","index","margin","zIndex","position","backgroundSize","require","display","flexDirection","alignItems","justifyContent","exitGame"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,eAAe,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAsBdC,WAtBc,GAsBAC,IAAI,IAAI;AACpB,UAAI,KAAKC,KAAL,CAAWC,YAAX,GAA0B,EAA9B,EAAkC;AAChC,aAAKC,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,aAAf,EAA8BJ,IAA9B,CADH;AAEZK,UAAAA,cAAc,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWG,aAAf,EAA8BJ,IAA9B,CAFJ;AAGZE,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,GAA0B;AAH5B,SAAd;AAKD,OAND,MAMO;AACLI,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,KAhCa;;AAAA,SAkCdC,YAlCc,GAkCC,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,UAAIC,OAAO,GAAG,EAAd;;AAEA,UAAI,KAAKT,KAAL,CAAWU,kBAAX,KAAkC,IAAtC,EAA4C;AAC1C,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,KAAL,CAAWG,aAAX,CAAyBS,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;AACxD,cACE,KAAKX,KAAL,CAAWG,aAAX,CAAyBQ,CAAzB,EAA4BE,IAA5B,KACA,KAAKC,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAWU,kBAA7B,EAAiDC,CAAjD,CAFF,EAGE;AACAF,YAAAA,OAAO,CAACO,IAAR,CAAa,IAAb;AACD;AACF;;AAED,YAAIP,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAIK,MAAM,GAAG,KAAKjB,KAAL,CAAWkB,YAAxB;AACA,eAAKhB,QAAL,CAAc;AAAEgB,YAAAA,YAAY,EAAED,MAAM,GAAG;AAAzB,WAAd;AACD,SAHD,MAGO;AACL,eAAKf,QAAL,CAAc;AACZiB,YAAAA,eAAe,EAAE;AADL,WAAd;AAGD;;AAED,aAAKjB,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAE,EADH;AAEZC,UAAAA,cAAc,EAAE,EAFJ;AAGZM,UAAAA,kBAAkB,EAAE,IAHR;AAIZU,UAAAA,mBAAmB,EACjBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,MAAvB,EAA+BH,MAA1D,IAAoE,CAL1D;AAMZc,UAAAA,mBAAmB,EACjBL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,MAAvB,EAA+BH,MAA1D,IAAoE,CAP1D;AAQZe,UAAAA,mBAAmB,EACjBN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,MAAvB,EAA+BH,MAA1D,IAAoE,CAT1D;AAUZgB,UAAAA,mBAAmB,EACjBP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,MAAvB,EAA+BH,MAA1D,IAAoE,CAX1D;AAYZX,UAAAA,YAAY,EAAE;AAZF,SAAd;AAcD,OAjCD,MAiCO;AACLI,QAAAA,KAAK,CACH,8GADG,CAAL;AAGD;AACF,KA7Ea;;AAAA,SA+EdwB,eA/Ec,GA+EI,MAAM;AACtB,WAAK3B,QAAL,mBACK,KAAK4B,YADV;AAEEC,QAAAA,SAAS,EAAE,CAAC,KAAK/B,KAAL,CAAW+B,SAFzB;AAGEC,QAAAA,UAAU,EAAE,CAAC,KAAKhC,KAAL,CAAWgC,UAH1B;AAIEC,QAAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWkB;AAJxB;;AAQA,UAAI,KAAKlB,KAAL,CAAWkB,YAAX,GAA0B,KAAKJ,KAAL,CAAWoB,aAAX,CAAyBC,UAAvD,EAAmE;AAEjE,cAAMC,IAAI,GAAG;AACXD,UAAAA,UAAU,EAAE,KAAKnC,KAAL,CAAWkB;AADZ,SAAb;AAIAmB,QAAAA,KAAK,iCAA0B,KAAKvB,KAAL,CAAWoB,aAAX,CAAyBI,EAAnD,GAAyD;AAC5DC,UAAAA,MAAM,EAAE,OADoD;AAE5DC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iBADT;AAEP,uBAAW;AAFJ,WAFmD;AAM5DC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANsD,SAAzD,CAAL,CAQCQ,IARD,CAQOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARd;AASD;AACF,KAxGa;;AAAA,SA0GdC,cA1Gc,GA0GG,MAAM;AACrB,aAAO,KAAKjC,KAAL,CAAWC,MAAX,CACLM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWC,MAAvB,EAA+BH,MAA1D,IAAoE,CAD/D,CAAP;AAGD,KA9Ga;;AAAA,SAgHdoC,gBAhHc,GAgHK,MAAM;AACvB,WAAKhD,KAAL,CAAWG,aAAX,CAAyB8C,GAAzB;AACA,WAAKjD,KAAL,CAAWI,cAAX,CAA0B6C,GAA1B;AAEA,WAAK/C,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aADd;AAEZC,QAAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWI,cAFf;AAGZH,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,GAA0B;AAH5B,OAAd;AAKD,KAzHa;;AAAA,SA2HdiD,WA3Hc,GA2HAC,WAAW,IAAI;AAC3B,WAAKjD,QAAL,CAAc;AAAEQ,QAAAA,kBAAkB,EAAEyC;AAAtB,OAAd;AACD,KA7Ha;;AAAA,SA+HdC,sBA/Hc,GA+HW,MAAM;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKnD,QAAL,CAAc;AAAEiB,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAnIa;;AAAA,SAqIdmC,oBArIc,GAqIS,MAAM;AAC3B,WAAKC,aAAL;AACD,KAvIa;;AAEZ,SAAKvD,KAAL,GAAa,KAAK8B,YAAlB;AACD;;AAED,MAAIA,YAAJ,GAAmB;AACjB,WAAO;AACL3B,MAAAA,aAAa,EAAE,EADV;AAELC,MAAAA,cAAc,EAAE,EAFX;AAGLM,MAAAA,kBAAkB,EAAE,IAHf;AAILQ,MAAAA,YAAY,EAAE,CAJT;AAKLjB,MAAAA,YAAY,EAAE,CALT;AAML8B,MAAAA,SAAS,EAAE,KANN;AAOLC,MAAAA,UAAU,EAAE,KAPP;AAQLC,MAAAA,SAAS,EAAE,CARN;AASLb,MAAAA,mBAAmB,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CATjD;AAULG,MAAAA,mBAAmB,EAAEL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAVjD;AAWLI,MAAAA,mBAAmB,EAAEN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAXjD;AAYLK,MAAAA,mBAAmB,EAAEP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC;AAZjD,KAAP;AAcD;;AAqHDiC,EAAAA,MAAM,GAAG;AACPjD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWoB,aAAvB;AACA;AACA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlC,KAAL,CAAW+B,SAAX,KAAyB,KAAzB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAGE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE,KAAKjC,WADpB;AAEE,MAAA,YAAY,EAAE,KAAKQ,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAGG,KAAKQ,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAWU,kBAA7B,IACG,KAAKI,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAWU,kBAA7B,EACG+C,KADH,CACS,CADT,EAEGC,OAFH,GAGGC,GAHH,CAGO,CAAC5D,IAAD,EAAO6D,KAAP,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,MAAM,aAAMF,KAAN,CAFD;AAGLG,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,cAAc,EAAE;AAJX,OADT;AAOE,MAAA,MAAM,EAAC,KAPT;AAQE,MAAA,KAAK,EAAC,KARR;AASE,MAAA,GAAG,EAAC,EATN;AAUE,MAAA,GAAG,EAAEC,OAAO,qBAAclE,IAAd,UAVd;AAWE,MAAA,GAAG,EAAEsB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,IAAsC,CAX7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ,CADH,GAqBG,IAxBN,CADF,EA4BE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAGE,oBAAC,oBAAD;AACE,MAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWI,cADrB;AAEE,MAAA,MAAM,EAAE,KAAKU,KAAL,CAAWC,MAFrB;AAGE,MAAA,gBAAgB,EAAE,KAAKiC,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CA5BF,EAsCE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKhD,KAAL,CAAWkB,YAA/B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKJ,KAAL,CAAWoB,aAAX,CAAyBC,UAA/C,CAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKN,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,KAAK7B,KAAL,CAAWmB,eAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEG,KAAKiC,sBAAL,EAFH,CADD,GAKG,IAXN,CAtCF,CARF,EA8DE;AACE,MAAA,KAAK,EAAE;AACLW,QAAAA,QAAQ,EAAE,UADL;AAELG,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE,KAHV;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,cAAc,EAAE;AALX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAKnB,WADpB;AAEE,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAWoB,mBAA7B,CAFT;AAGE,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWoB,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAcE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAK8B,WADpB;AAEE,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAW0B,mBAA7B,CAFT;AAGE,MAAA,WAAW,EAAE,KAAK1B,KAAL,CAAW0B,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAmBE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAKwB,WADpB;AAEE,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAW2B,mBAA7B,CAFT;AAGE,MAAA,WAAW,EAAE,KAAK3B,KAAL,CAAW2B,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAwBE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAKuB,WADpB;AAEE,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,MAAX,CAAkB,KAAKf,KAAL,CAAW4B,mBAA7B,CAFT;AAGE,MAAA,WAAW,EAAE,KAAK5B,KAAL,CAAW4B,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CA9DF,CADD,GA+FC,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWwD,QADvB;AAEE,MAAA,SAAS,EAAE,KAAKtE,KAAL,CAAWgC,UAFxB;AAGE,MAAA,SAAS,EAAE,KAAKhC,KAAL,CAAWiC,SAHxB;AAIE,MAAA,eAAe,EAAE,KAAKJ,eAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhGJ,CADF;AA0GD;;AAvPwD;AA0P3D;AACE;AACD;AACD;AACE;AACD;AACD;AACE;AACD","sourcesContent":["import React, { Fragment } from \"react\";\nimport BurgerBuildContainer from \"./BurgerBuildContainer\";\nimport Ingredients from \"../Components/Ingredients.js\";\n// import Countdown from 'react-countdown-now'\nimport Timer from \"../Components/Timer\";\nimport EndGame from \"../Components/EndGame\";\nimport Customers from \"../Components/Customers\";\n\nexport default class GameContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      currentBurger: [],\n      currentBurger2: [],\n      currentOrderNumber: null,\n      currentScore: 0,\n      clickCounter: 0,\n      gameEnded: false,\n      modalState: false,\n      lastScore: 0,\n      currentOrderNumber1: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber2: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber3: Math.floor(Math.random() * 10) + 1,\n      currentOrderNumber4: Math.floor(Math.random() * 10) + 1\n    };\n  }\n\n  buildBurger = ingr => {\n    if (this.state.clickCounter < 10) {\n      this.setState({\n        currentBurger: [...this.state.currentBurger, ingr],\n        currentBurger2: [...this.state.currentBurger, ingr],\n        clickCounter: this.state.clickCounter + 1\n      });\n    } else {\n      alert(\"stahp\");\n    }\n  };\n\n  burgerSubmit = () => {\n    console.log(\"clicking the bunnnn\");\n\n    let results = [];\n\n    if (this.state.currentOrderNumber !== null) {\n      for (let i = 0; i < this.state.currentBurger.length; i++) {\n        if (\n          this.state.currentBurger[i].name ===\n          this.props.orders[this.state.currentOrderNumber][i]\n        ) {\n          results.push(true);\n        }\n      }\n\n      if (results.length === 4) {\n        let update = this.state.currentScore;\n        this.setState({ currentScore: update + 1 });\n      } else {\n        this.setState({\n          incorrectBurger: true\n        });\n      }\n\n      this.setState({\n        currentBurger: [],\n        currentBurger2: [],\n        currentOrderNumber: null,\n        currentOrderNumber1:\n          Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber2:\n          Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber3:\n          Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        currentOrderNumber4:\n          Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1,\n        clickCounter: 0\n      });\n    } else {\n      alert(\n        \"Oh hey, you gotta pick a burger to build before you can submit it! See the four orders below the bottom bun.\"\n      );\n    }\n  };\n\n  changeGameState = () => {\n    this.setState({\n      ...this.initialState,\n      gameEnded: !this.state.gameEnded,\n      modalState: !this.state.modalState,\n      lastScore: this.state.currentScore\n    });\n\n  \n    if (this.state.currentScore > this.props.currentPlayer.high_score) {\n\n      const data = {\n        high_score: this.state.currentScore \n      } \n\n      fetch(`http://localhost:3000/${this.props.currentPlayer.id}`, {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type': 'applicaton/json',\n          'Accepts': 'application/json'\n        }, \n        body: JSON.stringify(data)\n      })\n      .then( res => res.json())\n    }\n  };\n\n  customerOrders = () => {\n    return this.props.orders[\n      Math.floor(Math.random() * Object.keys(this.props.orders).length) + 1\n    ];\n  };\n\n  removeIngredient = () => {\n    this.state.currentBurger.pop();\n    this.state.currentBurger2.pop();\n\n    this.setState({\n      currentBurger: this.state.currentBurger,\n      currentBurger2: this.state.currentBurger2,\n      clickCounter: this.state.clickCounter - 1\n    });\n  };\n\n  selectOrder = orderNumber => {\n    this.setState({ currentOrderNumber: orderNumber });\n  };\n\n  reverseIncorrectBurger = () => {\n    setTimeout(() => {\n      this.setState({ incorrectBurger: false });\n    }, 2000);\n  };\n\n  componentWillUnmount = () => {\n    this.clearTimeouts()\n  }\n\n  render() {\n    console.log(this.props.currentPlayer)\n    debugger\n    return (\n      <Fragment>\n        {this.state.gameEnded === false ? (\n          <div>\n            <h1> 🍔 Top Bun 🍔 </h1>\n\n            <Ingredients\n              buildBurger={this.buildBurger}\n              burgerSubmit={this.burgerSubmit}\n            />\n\n            <div className=\"columns\">\n              <div className=\"column\">\n                {\" \"}\n                {/** rendering current order to be fulfilled **/}\n                {this.props.orders[this.state.currentOrderNumber]\n                  ? this.props.orders[this.state.currentOrderNumber]\n                      .slice(0)\n                      .reverse()\n                      .map((ingr, index) => (\n                        <p>\n                          <img\n                            style={{\n                              margin: \"-45px\",\n                              zIndex: `-${index}`,\n                              position: \"relative\",\n                              backgroundSize: \"contain\"\n                            }}\n                            height=\"50%\"\n                            width=\"50%\"\n                            alt=\"\"\n                            src={require(`../images/${ingr}.png`)}\n                            key={Math.floor(Math.random() * 1000000) + 1}\n                          ></img>\n                        </p>\n                      ))\n                  : null}\n              </div>\n\n              <div className=\"column is-three-fifths\">\n                {\" \"}\n                {/** this is where the magic of ingredient stacking happens **/}\n                <BurgerBuildContainer\n                  burger={this.state.currentBurger2}\n                  orders={this.props.orders}\n                  removeIngredient={this.removeIngredient}\n                />\n              </div>\n\n              <div className=\"column\">\n                {\" \"}\n                {/** rendering the current score, timer, and conditionally, an alert to show when someone built the wrong burger **/}\n                <h3>Current score: {this.state.currentScore}</h3>\n                <h3>Your high score: {this.props.currentPlayer.high_score}</h3>\n                <Timer changeGameState={this.changeGameState} />\n                {this.state.incorrectBurger ? (\n                  <div>\n                    <h3>Oop, you made the wrong burger!</h3>\n                    {this.reverseIncorrectBurger()}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n\n            {/* the div below renders the four random customer orders the user can pick to build next */}\n            <div\n              style={{\n                position: \"relative\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\"\n              }}\n            >\n              <Customers\n                selectOrder={this.selectOrder}\n                order={this.props.orders[this.state.currentOrderNumber1]}\n                orderNumber={this.state.currentOrderNumber1}\n              />\n              <Customers\n                selectOrder={this.selectOrder}\n                order={this.props.orders[this.state.currentOrderNumber2]}\n                orderNumber={this.state.currentOrderNumber2}\n              />\n              <Customers\n                selectOrder={this.selectOrder}\n                order={this.props.orders[this.state.currentOrderNumber3]}\n                orderNumber={this.state.currentOrderNumber3}\n              />\n              <Customers\n                selectOrder={this.selectOrder}\n                order={this.props.orders[this.state.currentOrderNumber4]}\n                orderNumber={this.state.currentOrderNumber4}\n              />\n            </div>\n          </div>\n        ) : (\n          <EndGame\n            exitGame={this.props.exitGame}\n            showModal={this.state.modalState}\n            lastScore={this.state.lastScore}\n            changeGameState={this.changeGameState}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\n{\n  /* <div> */\n}\n{\n  /* {this.props.orders[this.state.currentOrderNumber1].map( ingr =>  <div style={{display: 'flex', flexDirection: 'column'}} key={Math.floor(Math.random() * 1000000) + 1}>{ingr}</div> )} */\n}\n{\n  /* </div> */\n}\n"]},"metadata":{},"sourceType":"module"}